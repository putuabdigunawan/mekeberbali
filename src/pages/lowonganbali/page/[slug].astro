---
import PageHeader from "@/components/PageHeader.astro";
import config from "@/config/config.json";

import Base from "@/layouts/Base.astro";
import CareerBenefits from "@/layouts/function-components/CareerBenefits";
import JobPosts from "@/layouts/function-components/JobPosts";
import Cta from "@/layouts/partials/Cta.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { getTaxonomy } from "@/lib/taxonomyParser.astro";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";

import Pagination from "@/layouts/components/Pagination.astro";
import { sortByDate } from "@/lib/utils/sortFunctions";

export async function getStaticPaths() {
  const posts = await getSinglePage("lowongan");
  const totalPages = Math.ceil(posts.length / config.settings.pagination);
  const paths = [];

  for (let i = 1; i < totalPages; i++) {
    paths.push({
      params: {
        slug: (i + 1).toString(),
      },
    });
  }
  return paths;
}

const careerIndex = (await getEntry(
  "lowongan",
  "-index"
)) as CollectionEntry<"lowongan">;

const { benefits, career, image } = careerIndex.data;
const categories = await getTaxonomy("lowongan", "categories");
const jobPosts = await getSinglePage("lowongan");

const { slug } = Astro.params;
const posts = await getSinglePage("lowongan");
const sortedPosts = sortByDate(posts);
const recentPost = sortedPosts.filter((item) => !item.data.featured);
const totalPages = Math.ceil(recentPost.length / config.settings.pagination);
const currentPage = slug && !isNaN(Number(slug)) ? Number(slug) : 1;
const indexOfLastPost = currentPage * config.settings.pagination;
const indexOfFirstPost = indexOfLastPost - config.settings.pagination;
const currentPosts = recentPost.slice(indexOfFirstPost, indexOfLastPost);

const page_data = {
  index_title: careerIndex.data.title,
  slug: `page / ${slug}`,
};
---

<Base
  title={careerIndex.data.title}
  meta_title={careerIndex.data.meta_title}
  description={careerIndex.data.description}
  image={careerIndex.data.image}
>
  <section class="page-hero pt-16">
    <div class="container">
      <PageHeader page_data={page_data} />
    </div>
  </section>

  <section class="section">
    <div class="container">
      <h2 class="h4 mb-4">Recent Posts</h2>

      <JobPosts
        client:load
        categories={categories}
        career={career}
        posts={currentPosts}
      />
      <Pagination
        section={"lowonganbali"}
        totalPages={totalPages}
        currentPage={currentPage}
      />
    </div>
  </section>

  <Cta />
</Base>
