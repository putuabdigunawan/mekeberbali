---
import Base from "@/layouts/Base.astro";
import CtaLowongan from "@/layouts/partials/CtaLowongan.astro";
import config from "@/config/config.json";
import CardJobBali from "@/layouts/function-components/CardJobBali";
import Pagination from "@/layouts/components/Pagination.astro";
import { sortByDate1 } from "@/lib/utils/sortFunctions";

// ambil static paths
export async function getStaticPaths() {
  try {
    // const response = await fetch(
    //   "https://firstoffice.mekeber.com/api/bali/lowongan"
    // );
    const apiUrl = import.meta.env.PUBLIC_API_URL;
    const response = await fetch(apiUrl);
    // const response = await fetch("http://127.0.0.1:8000/api/bali/lowongan/");
    if (!response.ok) {
      console.error(
        "Error fetching lowongan untuk getStaticPaths:",
        response.status
      );
      return []; // Kembalikan array kosong agar build tidak gagal
    }
    const result = await response.json(); // ambil data
    const lowongan = result?.data || []; // Asumsi array lowongan ada di dalam properti 'data'

    const totalPages = Math.ceil(lowongan.length / config.settings.pagination);
    const paths = [];

    for (let i = 1; i < totalPages; i++) {
      paths.push({
        params: {
          slug: (i + 1).toString(),
        },
      });
    }
    return paths;
  } catch (error) {
    console.error("Error di getStaticPaths:", error);
    return []; // Kembalikan array kosong jika terjadi error fetch
  }
}

const { slug } = Astro.params;
// const response = await fetch(
//   "https://firstoffice.mekeber.com/api/bali/lowongan"
// );
const apiUrl = import.meta.env.PUBLIC_API_URL;
const response = await fetch(apiUrl);
// const response = await fetch("http://127.0.0.1:8000/api/bali/lowongan/");
const result = await response.json();
const lowongan = result.data; // Asumsi array lowongan ada di dalam properti 'data'

const sortedPosts = sortByDate1(lowongan);

const currentPage = slug && !isNaN(Number(slug)) ? Number(slug) : 1;
const totalPages = Math.ceil(sortedPosts.length / config.settings.pagination);

const indexOfLastPost = currentPage * config.settings.pagination;
const indexOfFirstPost = indexOfLastPost - config.settings.pagination;

const recentPost = sortedPosts;

const currentPosts = recentPost.slice(indexOfFirstPost, indexOfLastPost);

const page_data = {
  index_title: lowongan.title,
  slug: `page / ${slug}`,
};
---

<Base
  title="Daftar lowongan Bali 2025"
  meta_title="Lowongan Bali 2025 | Mekeber"
  description="Daftar lowongan yang tersedia di Denpasar, Tabanan, Canggu"
>
  <section>
    <div class="container py-10">
      <h1 class="mt-5 text-center">
        Mekeber Bali: <br />Daftar Lowongan Kerja 2025
      </h1>
      <p class="mb-8 text-center">
        Khusus area Bali seperti Denpasar, Tabanan, Badung, Ubud, Klungkung,
        Singaraja, Uluwatu, Jimbaran
      </p>

      <div class="row mt-12">
        {
          currentPosts.map(
            (
              posts: any,
              i: number // Perhatikan perubahan tipe 'post' menjadi 'any' atau tipe yang sesuai
            ) => <CardJobBali key={`post-${i}`} posts={posts} />
          )
        }
      </div>
    </div>
  </section>

  <Pagination
    section={"lowongan"}
    totalPages={totalPages}
    currentPage={currentPage}
  />
  <CtaLowongan />
</Base>
